ECS System: Basic component and entity template setup.
			Basic component manager
			Basic component storage.
			Basic entity manager (needs a little more attention imo)
			Basic general system
			Basic Coordinator class that handles all the managers in one spot
			Basic Event Bus (done. need to test)
			Re-Written Texture class as a c struct
			Basic main class based off of Texture clicker.cpp to actually have a proper insertion point
			Engine works. Need to add conversion of destruction system to work with engine. Probably cannot be a system of its own, since it is more complex than just ecs. But can make it work with ecs system
			Need to figure out memory management and garbage collection. (stretch goal)


Look into scene graphs for how to make child-parent relationships in scene: https://en.wikipedia.org/wiki/Scene_graph
Code for engine based off of https://savas.ca/nomad and https://austinmorlan.com/posts/entity_component_system/